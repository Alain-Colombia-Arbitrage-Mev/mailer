version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Set Node.js version to 18 (compatible with Amplify)
        - nvm use 18
        # Enable corepack for modern package managers
        - corepack enable
        # Clean install to ensure native bindings are correct for Linux (Amplify environment)
        - rm -rf node_modules package-lock.json
        # Remove any Windows-specific packages that might be cached
        - npm uninstall @esbuild/win32-x64 @oxc-parser/binding-win32-x64-msvc @oxc-transform/binding-win32-x64-msvc @rollup/rollup-win32-x64-msvc @oxc-minify/binding-win32-x64-msvc --no-save || true
        # Install with proper dependencies for Amplify's Linux environment, allowing npm to handle optionalDependencies
        - npm install --no-audit --no-fund
        # Force install only Linux native bindings if needed
        - npm install @oxc-parser/binding-linux-x64-gnu @oxc-transform/binding-linux-x64-gnu @rollup/rollup-linux-x64-gnu @esbuild/linux-x64 @oxc-minify/binding-linux-x64-gnu oxc-transform --save-dev || true
    build:
      commands:
        # Set Node.js environment for production build with Amplify preset
        - export NODE_ENV=production
        - export NITRO_PRESET=aws-amplify
        # Build the Nuxt 3 application for Amplify
        - npm run build
  artifacts:
    # Nuxt 3 builds to .output directory
    baseDirectory: .output
    files:
      - '**/*'
  cache:
    paths:
      # Cache node_modules for faster builds
      - node_modules/**/*
      # Cache .nuxt build cache
      - .nuxt/**/*